name: Build KernelSU-Next + SUSFS for Pixel 4XL

on:
  workflow_dispatch:  # Запуск вручную через Actions tab

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kernel source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Полный гит-история для патчей
          submodules: false  # Отключаем автоматическое обновление submodules

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential curl flex git gnupg gperf libncurses5-dev libsdl1.2-dev libxml2 libxml2-utils lzop pngcrush schedtool squashfs-tools xsltproc zip zlib1g-dev gcc-multilib g++-multilib libelf-dev python3 python3-pip
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Download Android toolchain
        run: |
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9
          export PATH=$PATH:$(pwd)/aarch64-linux-android-4.9/bin
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          export ARCH=arm64
          export SUBARCH=arm64

      - name: Clean and prepare kernel source
        run: |
          # Удаляем старую интеграцию KSU
          rm -rf KernelSU
          # Удаляем submodule ссылки из .gitmodules и .git/config
          rm -f .gitmodules
          git config --unset-all submodule.KernelSU.url || true
          # Возвращаем проблемный файл к оригинальному состоянию
          git checkout -- fs/notify/fdinfo.c || true
          # Показываем статус
          echo "=== Git status after cleanup ==="
          git status --short

      - name: Integrate KernelSU-Next v1.1.0
        run: |
          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/v1.1.0/kernel/setup.sh" | bash -s v1.1.0
          echo "=== Git status after KSU integration ==="
          git status --short

      - name: Integrate SUSFS patches with manual fix
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu.git
          cd susfs4ksu
          git checkout kernel-4.14
          cd ..
          
          # Очищаем trailing whitespace из патча
          sed 's/[[:space:]]*$//' susfs4ksu/kernel_patches/50_add_susfs_in_kernel-4.14.patch > cleaned_susfs.patch
          
          # Применяем патч с reject файлами
          git apply --reject --ignore-whitespace cleaned_susfs.patch
          
          # Проверяем и показываем reject файл
          if [ -f "fs/notify/fdinfo.c.rej" ]; then
            echo "=== REJECT FILE CONTENT ==="
            cat fs/notify/fdinfo.c.rej
            
            echo "=== CURRENT fdinfo.c AROUND LINE 83 ==="
            sed -n '70,100p' fs/notify/fdinfo.c
            
            # ПОЛНАЯ РУЧНАЯ ПРАВКА - добавляем SUSFS блок после inotify
            # Ищем строку с inotify_mark_user_mask и добавляем SUSFS код
            if grep -q "inotify_mark_user_mask(mark)" fs/notify/fdinfo.c; then
              # Создаём временный файл с исправлением
              awk '
              /seq_printf\(m, "inotify wd:%x ino:%lx sdev:%x mask:%x ignored_mask:0 ",/ {
                print $0
                print "			   inotify_mark_user_mask(mark));"
                print "			} else if (mark->type == FSNOTIFY_MARK_TYPE_SUSFS) {"
                print "				struct susfs_mark *susfs_mark;"
                print "				susfs_mark = container_of(mark, struct susfs_mark, fsn_mark);"
                print "				seq_printf(m, \"susfs wd:%x ino:%lx sdev:%x mask:%x\","
                print "					   susfs_mark->wd, mark->inode->i_ino, mark->inode->i_sb->s_dev,"
                print "					   susfs_mark->mask);"
                next
              }
              /inotify_mark_user_mask\(mark\);/ { next }  # Пропускаем оригинальную строку
              { print }
              ' fs/notify/fdinfo.c > fs/notify/fdinfo_fixed.c
              
              # Проверяем, что исправление получилось
              if grep -q "susfs wd:%x" fs/notify/fdinfo_fixed.c; then
                mv fs/notify/fdinfo_fixed.c fs/notify/fdinfo.c
                echo "✓ Manual SUSFS fix applied successfully"
              else
                echo "✗ Manual fix failed, showing current file:"
                cat fs/notify/fdinfo_fixed.c
                exit 1
              fi
            else
              echo "✗ Could not find inotify reference for SUSFS integration"
              exit 1
            fi
            
            rm -f fs/notify/fdinfo.c.rej cleaned_susfs.patch
          else
            echo "✓ No reject files - all patches applied cleanly"
          fi
          
          # Финальная проверка
          echo "=== FINAL fdinfo.c SUSFS CHECK ==="
          grep -A5 -B5 "susfs.*wd:%x" fs/notify/fdinfo.c || echo "WARNING: SUSFS code not found in fdinfo.c"

      - name: Prepare config
        run: |
          make O=out coral_defconfig
          # Включаем KSU и SUSFS
          sed -i 's/# CONFIG_KSU is not set/CONFIG_KSU=y/' out/.config || true
          sed -i 's/# CONFIG_SUSFS is not set/CONFIG_SUSFS=y/' out/.config || true
          sed -i 's/# CONFIG_KPROBES is not set/CONFIG_KPROBES=y/' out/.config || true
          
          echo "=== KERNEL CONFIG ==="
          grep -E "(CONFIG_KSU|CONFIG_SUSFS|CONFIG_KPROBES)" out/.config || echo "Config options not found"

      - name: Build kernel
        run: |
          make O=out -j$(nproc --all) Image.gz-dtb

      - name: Package with AnyKernel3
        run: |
          git clone https://github.com/osm0sis/AnyKernel3
          cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/Image.gz-dtb
          cd AnyKernel3
          sed -i 's/device.name1=/device.name1=coral/' anykernel.sh
          sed -i 's/isize=/isize=3072/' anykernel.sh
          sed -i 's/kernel.string=/kernel.string=KernelSU-Next v1.1.0 + SUSFS/' anykernel.sh
          zip -r4 ../AnyKernel3-KSU-SUSFS.zip *
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-zip
          path: AnyKernel3-KSU-SUSFS.zip
